import { faker } from "@faker-js/faker";
import { prisma } from "../app/lib/prisma-client";

// Objetivos pessoais realistas para o seed
const personalGoals = [
	{
		title: "Desenvolver Flu√™ncia em Ingl√™s",
		description:
			"Alcan√ßar flu√™ncia conversacional em ingl√™s para oportunidades profissionais e viagens internacionais.",
		estimated_time: "12-18 meses",
		action_steps: [
			"Avaliar n√≠vel atual atrav√©s de teste de profici√™ncia",
			"Estabelecer rotina di√°ria de 30 minutos de estudo",
			"Inscrever-se em curso online estruturado",
			"Praticar conversa√ß√£o semanal com falantes nativos",
			"Consumir m√≠dia em ingl√™s (filmes, podcasts, livros)",
		],
		progress_indicators: [
			"Conseguir manter conversa√ß√£o de 10 minutos sem pausas",
			"Compreender 80% de um filme sem legendas",
			"Ler um livro completo em ingl√™s",
			"Obter pontua√ß√£o TOEFL 100+",
		],
		suggested_habits: [
			"Estudar ingl√™s 30 minutos toda manh√£",
			"Mudar idioma do celular para ingl√™s",
			"Escrever di√°rio pessoal em ingl√™s",
			"Assistir not√≠cias em ingl√™s durante caf√©",
		],
		motivation_strategies:
			"Definir marcos mensais com recompensas, encontrar parceiro de estudos, participar de grupos de conversa√ß√£o, visualizar objetivos futuros que requerem ingl√™s.",
		assistant_message:
			"Entendi seu objetivo de aprender ingl√™s! Refinei sua meta com um plano estruturado e h√°bitos espec√≠ficos. O que acha desses passos?",
	},
	{
		title: "Melhorar Condicionamento F√≠sico e Sa√∫de",
		description:
			"Estabelecer rotina de exerc√≠cios consistente para melhorar sa√∫de cardiovascular, for√ßa e bem-estar geral.",
		estimated_time: "6-12 meses",
		action_steps: [
			"Consultar m√©dico para avalia√ß√£o f√≠sica inicial",
			"Criar plano de exerc√≠cios progressivo",
			"Estabelecer rotina de 4x por semana",
			"Ajustar alimenta√ß√£o para suportar objetivos",
			"Acompanhar progresso com m√©tricas semanais",
		],
		progress_indicators: [
			"Correr 5km sem parar",
			"Perder 10kg de forma saud√°vel",
			"Fazer 50 flex√µes consecutivas",
			"Melhorar exames de sangue",
		],
		suggested_habits: [
			"Exercitar-se √†s 6h da manh√£",
			"Preparar refei√ß√µes saud√°veis no domingo",
			"Caminhar 10.000 passos di√°rios",
			"Dormir 8 horas por noite",
		],
		motivation_strategies:
			"Usar aplicativo de tracking, tirar fotos de progresso, definir recompensas por metas atingidas, encontrar parceiro de treino.",
		assistant_message:
			"√ìtimo objetivo de sa√∫de! Estruturei um plano progressivo que come√ßa com avalia√ß√£o m√©dica e evolui para h√°bitos sustent√°veis. Vamos come√ßar?",
	},
	{
		title: "Desenvolver Habilidades de Programa√ß√£o",
		description:
			"Aprender desenvolvimento web moderno para transi√ß√£o de carreira ou melhoria profissional.",
		estimated_time: "8-12 meses",
		action_steps: [
			"Escolher stack tecnol√≥gica (React, Node.js)",
			"Completar curso estruturado online",
			"Construir 3 projetos pr√°ticos",
			"Contribuir para projetos open source",
			"Preparar portf√≥lio profissional",
		],
		progress_indicators: [
			"Completar primeiro projeto full-stack",
			"Fazer deploy de aplica√ß√£o em produ√ß√£o",
			"Conseguir primeira entrevista t√©cnica",
			"Receber feedback positivo em code review",
		],
		suggested_habits: [
			"Programar 2 horas di√°rias",
			"Resolver 1 problema de algoritmo por dia",
			"Ler documenta√ß√£o t√©cnica semanalmente",
			"Participar de comunidades de desenvolvedores",
		],
		motivation_strategies:
			"Acompanhar progresso em GitHub, celebrar pequenas vit√≥rias, encontrar mentor, visualizar nova carreira.",
		assistant_message:
			"Excelente escolha para desenvolvimento de carreira! Criei um roadmap pr√°tico com projetos reais e m√©tricas claras de progresso. Que tal come√ßar hoje?",
	},
];

// Mensagens de assistente que seguem o formato JSON do sistema
const assistantResponses = [
	{
		message:
			"Entendi seu objetivo de aprender ingl√™s! Refinei sua meta com alguns passos e sugest√µes. Que tal?",
		data: {
			title: "Desenvolver Flu√™ncia em Ingl√™s atrav√©s de Pr√°tica Estruturada",
			description:
				"Estabelecer um plano estruturado para alcan√ßar flu√™ncia em ingl√™s atrav√©s de pr√°tica di√°ria, imers√£o cultural e uso de ferramentas variadas de aprendizado.",
			estimated_time: "12-18 meses",
			action_steps: [
				"Avaliar n√≠vel atual atrav√©s de teste de profici√™ncia",
				"Estabelecer rotina di√°ria de 30 minutos de estudo",
				"Inscrever-se em curso online estruturado",
				"Praticar conversa√ß√£o semanal com falantes nativos",
				"Consumir m√≠dia em ingl√™s (filmes, podcasts, livros)",
			],
			progress_indicators: [
				"Conseguir manter conversa√ß√£o de 10 minutos sem pausas",
				"Compreender 80% de um filme sem legendas",
				"Ler um livro completo em ingl√™s",
				"Obter pontua√ß√£o TOEFL 100+",
			],
			suggested_habits: [
				"Estudar ingl√™s 30 minutos toda manh√£",
				"Mudar idioma do celular para ingl√™s",
				"Escrever di√°rio pessoal em ingl√™s",
				"Assistir not√≠cias em ingl√™s durante caf√©",
			],
			motivation_strategies:
				"Definir marcos mensais com recompensas, encontrar parceiro de estudos, participar de grupos de conversa√ß√£o, visualizar objetivos futuros que requerem ingl√™s.",
		},
	},
	{
		message:
			"Perfeito! Estruturei um plano completo de sa√∫de e fitness. Vamos come√ßar com uma avalia√ß√£o m√©dica e evoluir gradualmente!",
		data: {
			title: "Estabelecer Rotina de Exerc√≠cios e Alimenta√ß√£o Saud√°vel",
			description:
				"Criar um estilo de vida ativo e nutritivo que promova sa√∫de f√≠sica e mental a longo prazo.",
			estimated_time: "6-12 meses",
			action_steps: [
				"Fazer check-up m√©dico completo",
				"Definir metas espec√≠ficas de condicionamento",
				"Criar cronograma semanal de exerc√≠cios",
				"Planejar card√°pio semanal balanceado",
				"Estabelecer rotina de acompanhamento",
			],
			progress_indicators: [
				"Perder 8-12kg de forma saud√°vel",
				"Conseguir correr 5km continuamente",
				"Melhorar exames laboratoriais",
				"Sentir mais energia no dia a dia",
			],
			suggested_habits: [
				"Treinar 4x por semana no mesmo hor√°rio",
				"Preparar refei√ß√µes saud√°veis no domingo",
				"Caminhar pelo menos 8.000 passos di√°rios",
				"Dormir 7-8 horas por noite",
			],
			motivation_strategies:
				"Tirar fotos de progresso mensais, usar aplicativo de tracking, definir recompensas por metas, encontrar parceiro de treino.",
		},
	},
	{
		message:
			"Que legal seu interesse em programa√ß√£o! Poderia me contar mais sobre seu objetivo? Por exemplo, que tipo de desenvolvimento te interessa mais?",
	},
	{
		message:
			"Entendi que voc√™ quer melhorar seus h√°bitos. Isso √© √≥timo! Poderia especificar quais √°reas da sua vida voc√™ gostaria de focar?",
	},
	{
		message:
			"Organizar objetivos de vida √© muito importante! Que tal come√ßarmos identificando suas principais √°reas de interesse? Carreira, sa√∫de, relacionamentos?",
	},
];

async function main() {
	// Limpar dados existentes
	await prisma.chatMessage.deleteMany();
	await prisma.chat.deleteMany();
	await prisma.goal.deleteMany();

	console.log("üßπ Dados anteriores removidos...");

	// Criar chats com conversas sobre objetivos pessoais
	const chats = [];
	for (let i = 0; i < 10; i++) {
		const chat = await prisma.chat.create({
			data: {
				title: faker.helpers.arrayElement([
					"Discuss√£o sobre aprendizado de idiomas",
					"Planejamento de metas fitness",
					"Conversa sobre desenvolvimento de carreira",
					"Objetivos de desenvolvimento pessoal",
					"Refinamento de metas de vida",
				]),
			},
		});
		chats.push(chat);
	}

	console.log("üí¨ 10 chats criados...");

	// Criar mensagens de chat realistas
	for (const chat of chats) {
		// Mensagem inicial do usu√°rio
		const userMessage = await prisma.chatMessage.create({
			data: {
				content: JSON.stringify({
					message: faker.helpers.arrayElement([
						"Quero aprender ingl√™s fluente para conseguir um emprego melhor",
						"Preciso melhorar minha sa√∫de f√≠sica, mas n√£o sei por onde come√ßar",
						"Gostaria de aprender programa√ß√£o para mudar de carreira",
						"Quero desenvolver melhor disciplina e h√°bitos saud√°veis",
						"Preciso organizar melhor meus objetivos de vida",
					]),
				}),
				role: "user",
				chat_id: chat.id,
			},
		});

		// Resposta do coach IA - agora em formato JSON
		const assistantResponse = faker.helpers.arrayElement(assistantResponses);
		await prisma.chatMessage.create({
			data: {
				content: JSON.stringify(assistantResponse),
				role: "assistant",
				chat_id: chat.id,
			},
		});

		// Poss√≠vel mensagem de follow-up
		if (faker.datatype.boolean({ probability: 0.6 })) {
			await prisma.chatMessage.create({
				data: {
					content: JSON.stringify({
						message: faker.helpers.arrayElement([
							"Isso parece muito bom! Como posso come√ßar hoje mesmo?",
							"Quanto tempo voc√™ acha que vai levar para ver resultados?",
							"Esses h√°bitos parecem desafiadores, tem alguma dica?",
							"Gostei muito do plano, vou salvar esse objetivo!",
						]),
					}),
					role: "user",
					chat_id: chat.id,
				},
			});

			// Sempre responder com uma mensagem do assistente para finalizar
			await prisma.chatMessage.create({
				data: {
					content: JSON.stringify({
						message: faker.helpers.arrayElement([
							"√ìtimo! Sugiro come√ßar pelo primeiro passo hoje mesmo. Pequenas a√ß√µes di√°rias fazem toda a diferen√ßa!",
							"Os primeiros resultados geralmente aparecem em 2-4 semanas. O importante √© manter a consist√™ncia!",
							"Sim! Comece devagar e v√° aumentando gradualmente. O segredo √© criar o h√°bito primeiro, depois intensificar.",
							"Perfeito! Lembre-se: voc√™ pode sempre voltar aqui para refinar ou ajustar seu objetivo conforme evolui.",
							"Excelente atitude! Estarei aqui para te apoiar sempre que precisar. Vamos em frente!",
						]),
					}),
					role: "assistant",
					chat_id: chat.id,
				},
			});
		}
	}

	console.log("üìù Mensagens de chat criadas...");

	// Buscar todas as mensagens de chat para evitar repeti√ß√£o
	const allChatMessages = await prisma.chatMessage.findMany({
		where: { role: "assistant" },
	});

	// Criar apenas o n√∫mero de goals que permite IDs √∫nicos
	const maxGoals = Math.min(15, allChatMessages.length + 5); // +5 para goals sem chat_message_id

	const usedChatMessageIds = new Set<string>();

	for (let i = 0; i < maxGoals; i++) {
		const goalTemplate = faker.helpers.arrayElement(personalGoals);

		// Para evitar IDs duplicados, usar √≠ndices sequenciais quando poss√≠vel
		let chatMessageId = null;
		if (
			i < allChatMessages.length &&
			faker.datatype.boolean({ probability: 0.7 }) &&
			!usedChatMessageIds.has(allChatMessages[i].id)
		) {
			chatMessageId = allChatMessages[i].id;
			usedChatMessageIds.add(chatMessageId);
		}

		await prisma.goal.create({
			data: {
				title: goalTemplate.title + (i > 2 ? ` - Vers√£o ${i - 2}` : ""),
				description: goalTemplate.description,
				estimated_time: goalTemplate.estimated_time,
				action_steps: goalTemplate.action_steps,
				progress_indicators: goalTemplate.progress_indicators,
				suggested_habits: goalTemplate.suggested_habits,
				motivation_strategies: goalTemplate.motivation_strategies,
				chat_message_id: chatMessageId,
			},
		});
	}

	console.log(`üéØ ${maxGoals} objetivos pessoais criados...`);

	console.log("\n‚úÖ Seed completo! Criado:");
	console.log("- 10 chats sobre desenvolvimento pessoal");
	console.log("- ~25 mensagens de coaching");
	console.log(`- ${maxGoals} objetivos pessoais estruturados`);
	console.log("\nüöÄ Agora voc√™ pode testar o sistema de coaching pessoal!");
}

main()
	.then(async () => {
		await prisma.$disconnect();
	})
	.catch(async (e) => {
		console.error(e);
		await prisma.$disconnect();
		process.exit(1);
	});
